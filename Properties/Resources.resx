<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnEnglishTitle" xml:space="preserve">
    <value>Changes:</value>
  </data>
  <data name="btnGermanTitle" xml:space="preserve">
    <value>Änderungen:</value>
  </data>
  <data name="btnPatchHE_EnglishText" xml:space="preserve">
    <value>- Activates the Development - Mode (Necessary for the LuaDebugger to work).
- Can disable the autosave or set an custom interval.
- Can set the maximum zoom level in the game.
- Can set the Large Address Aware Flag for more usable memory.
- Fixes the "Meldungsstau" - Bug in the game.
-&gt; Does NOT work with the Steam - HE!</value>
  </data>
  <data name="btnPatchHE_GermanText" xml:space="preserve">
    <value>- Aktiviert den Development - Mode (Notwendig für die Funktion des LuaDebuggers).
- Kann den Autosave deaktivieren oder den Intervall setzen.
- Kann den maximalen Zoomlevel setzen.
- Kann das Large Address Aware Flag aktivieren, um mehr adressierbaren Speicher zu haben.
- Fixt den Meldungsstau - Bug im Spiel.
-&gt; Funktioniert NICHT in der Steam - HE!</value>
  </data>
  <data name="btnPatchOV_EnglishText" xml:space="preserve">
    <value>- Reactivates the texture-slider, so high textures can be choosen in the menu.
- Enables high-quality ground textures.
- Can set the maximum zoom level in the game.
- Activates the Development - Mode without Registry - Key.
- Can set the Large Address Aware Flag for more usable memory.</value>
  </data>
  <data name="btnPatchOV_GermanText" xml:space="preserve">
    <value>- Reaktiviert den Textur-Slider, um hohe Texturen auswählen zu können.
- Setzt die Qualität von Bodentexturen auf den höchsten Wert.
- Kann den maximalen Zoomlevel setzen.
- Kann das Large Address Aware Flag aktivieren, um mehr adressierbaren Speicher zu haben.
- Aktiviert den Development - Mode ohne Registry - Key.</value>
  </data>
  <data name="btnPatch_EnglishText" xml:space="preserve">
    <value>- High resolution textures for Buildings/Entities/Ground.
- Unlimited scaling of the entity size.
- Free placing and moving of entities, walls and wall gates.
- Higher entity limit.
- Move more entities at the same time (100 -&gt; 1055).
- Black map border area can be used and is not deleted at map save.
- Activates the Development-Mode without Registry-Key.
- Replaces "Validate Map" with Game Start (Lost Feature).
- Enables walls and wall gates from all climate zones in all climate zones.
- Can place, select and move all entity types (Careful, some may crash).
- Can set the Large Address Aware Flag for more usable memory.</value>
  </data>
  <data name="btnPatch_GermanText" xml:space="preserve">
    <value>- Hohe Texturen für Gebäude/Entitäten/Boden.
- Unbegrenztes Skalieren der Größe von Entitäten.
- Freies Platzieren und Ineinander-Verschieben von Entitäten, Mauern und Mauertoren.
- Erhöhen des Entitätenlimits.
- Mehr Entitäten gleichzeitig Bewegen (100 -&gt; 1055).
- Kartenrand wird beim Speichervorgang nicht gelöscht.
- Dauerhaftes Aktivieren des Development-Modes ohne Registry-Key.
- Ersetzt "Validate Map" mit Spielstart (Lost Feature).
- Mauern und Mauertore aus allen Klimazonen können gesetzt werden.
- Alle Entitäten können platziert, selektiert und verschoben werden (Achtung, einige führen zum Absturz).
- Kann das Large Address Aware Flag aktivieren, um mehr adressierbaren Speicher zu haben.</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="LocalMainMapScript" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\LocalMainMapScript.lua;System.Byte[], mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
</root>